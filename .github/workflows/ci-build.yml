name: ci-build

on:
  push:
    branches: [ main, release/** ]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  facilitator-build:
    defaults:
      run:
        working-directory: facilitator
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint
      run: cargo fmt --message-format human -- --check
    - name: clippy
      run: cargo clippy --all-targets -- -D warnings
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  facilitator-coverage:
    defaults:
      run:
        working-directory: facilitator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install lcov
        run: sudo apt install lcov -y
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
      - name: Install grcov
        run: cargo install --locked grcov
      - name: Test
        run: cargo test --all-features --no-fail-fast
        env:
          RUSTC_BOOTSTRAP: '1' # https://github.com/mozilla/grcov#usage
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: Get code coverage
        run: grcov ./target/debug -s . --llvm --branch --guess-directory-when-missing --ignore-not-existing -t lcov -o coverage.txt
      - name: Clean lcov file
        run: lcov --extract coverage.txt -o coverage.txt 'src/*'
      - name: Upload test coverage
        if: success()
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
          file: ./facilitator/coverage.txt
          flags: facilitator_tests
          name: facilitator tests

  terraform:
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.8
    - name: Terraform fmt
      run: terraform fmt --check --recursive
    - name: Terraform init
      run: terraform init --backend=false
    - name: Terraform validate
      run: terraform validate

  facilitator-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      uses: docker/build-push-action@v2
      with:
        file: ./facilitator/Dockerfile

  deploy-operator-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      uses: docker/build-push-action@v2
      with:
        file: ./deploy-operator/Dockerfile
        context: ./deploy-operator

  deploy-operator-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deploy-operator
    steps:
    - uses: actions/checkout@v2
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
    - name: Get kubebuilder
      run: |
        wget https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_linux_amd64.tar.gz
        tar -zxvf kubebuilder*.tar.gz
        sudo mkdir -p /usr/local
        sudo mv kubebuilder_2.3.1_linux_amd64 /usr/local/kubebuilder
    - name: Test
      run: go test ./... -race -coverprofile cover.out
    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
        file: "deploy-operator/cover.out"
        flags: deploy_operator_tests
        name: deploy-operator tests

  manifest-updater-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      uses: docker/build-push-action@v2
      with:
        file: ./manifest-updater/Dockerfile
        context: ./manifest-updater

  manifest-updater-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: manifest-updater
    steps:
    - uses: actions/checkout@v2
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
    - name: Test
      run: go test -race --coverprofile=cover.out --covermode=atomic ./...
    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
        file: "manifest-updater/cover.out"
        flags: manifest_updater_tests
        name: manifest-updater tests

  workflow-manager-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: workflow-manager
    steps:
    - uses: actions/checkout@v2
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
    - name: Test
      run: go test -race --coverprofile=cover.out --covermode=atomic ./...
    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
        file: "workflow-manager/cover.out"
        flags: workflow_manager_tests
        name: workflow-manager tests
