name: ci-build

on:
  push:
    branches: [ main, release/** ]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  facilitator-build:
    defaults:
      run:
        working-directory: facilitator
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Lint
      run: cargo fmt --message-format human -- --check
    - name: clippy
      run: cargo clippy --all-targets -- -D warnings
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  facilitator-coverage:
    defaults:
      run:
        working-directory: facilitator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install lcov
        run: sudo apt install lcov -y
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
      - name: Install grcov
        run: cargo install --locked grcov
      - name: Test
        run: cargo test --all-features --no-fail-fast
        env:
          RUSTC_BOOTSTRAP: '1' # https://github.com/mozilla/grcov#usage
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: Get code coverage
        run: grcov ./target/debug -s . --llvm --branch --guess-directory-when-missing --ignore-not-existing -t lcov -o coverage.txt
      - name: Clean lcov file
        run: lcov --extract coverage.txt -o coverage.txt 'src/*'
      - name: Upload test coverage
        if: success()
        uses: codecov/codecov-action@v2.1.0
        with:
          fail_ci_if_error: false
          file: ./facilitator/coverage.txt
          flags: facilitator_tests
          name: facilitator tests

  terraform:
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ~1.1.0
    - name: Terraform fmt
      run: terraform fmt --check --recursive
    - name: Terraform init
      run: terraform init --backend=false
    - name: Terraform validate
      run: terraform validate

  facilitator-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      uses: docker/build-push-action@v2
      with:
        file: ./facilitator/Dockerfile

  workflow-manager-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      run: ./workflow-manager/build.sh

  workflow-manager-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: workflow-manager
    steps:
    - uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.18
    - name: Test
      run: go test -race --coverprofile=cover.out --covermode=atomic ./...
    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v2.1.0
      with:
        fail_ci_if_error: false
        file: "workflow-manager/cover.out"
        flags: workflow_manager_tests
        name: workflow-manager tests
  
  key-rotator-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v1
    - name: build
      uses: docker/build-push-action@v2
      with:
        file: ./key-rotator/Dockerfile
  
  key-rotator-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: key-rotator
    steps:
    - uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.18
    - name: Test
      run: go test -race -coverprofile=cover.out --covermode=atomic ./...
    - name: Upload test coverage
      if: success()
      uses: codecov/codecov-action@v2.1.0
      with:
        fail_ci_if_error: false
        file: "key-rotator/cover.out"
        flags: key_rotator_tests
        name: key-rotator tests
  
  key-rotator-golangci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run golangci-lint on key-rotator
      uses: golangci/golangci-lint-action@v2.5.2
      with:
        working-directory: key-rotator
        version: "v1.43.0"
        args: "--config ../.golangci.yml --timeout 10m"

  workflow-manager-golangci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run golangci-lint on workflow-manager
      uses: golangci/golangci-lint-action@v2.5.2
      with:
        working-directory: workflow-manager
        version: "v1.43.0"
        args: "--config ../.golangci.yml --timeout 10m"
